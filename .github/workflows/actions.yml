name: Build and Publish

on:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Generate Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_REGISTRY }}/shr
          # generate Docker tags based on the following events/attributes
          # on tag event: tag using git tag, and as latest if the tag doesn't contain hyphens (pre-releases)
          # on push event: tag using git sha, branch name and as latest-dev
          tags: |
            type=raw,value=latest,enable=${{ github.ref_type == 'tag' && !contains(github.ref_name, '-') }}
            type=raw,value=latest-dev,enable=${{ github.ref_type == 'branch' && github.ref_name == 'main' }}
            type=raw,value=${{ github.ref_name }}
            type=raw,value=${{ github.sha }},enable=${{ github.ref_type == 'branch' }}
          flavor: |
            latest=false

      - name: Login to Yandex Registry
        uses: docker/login-action@v3
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.DOCKER_JSON_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Collect Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./shr.API/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/image.tar

      - name: Load Collected Image to Docker
        run: |
          docker load -i /tmp/image.tar

      - name: Push Image with Docker
        run: |
          docker push ${{ secrets.DOCKER_REGISTRY }}/shr --all-tags
